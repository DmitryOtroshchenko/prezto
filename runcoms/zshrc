#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

#
# Disable r builtin so that we could start r in Terminal
#
disable r

#
# A more useful keymap.
#
bindkey '^U' backward-kill-line
bindkey '^B' backward-word
bindkey '^F' forward-word

#
# Python
#

export VIRTUAL_ENV_DISABLE_PROMPT=0
source ~/.virtualenvs/py/bin/activate

#
# To compile stuff on Mac...
#
#
if [[ "$OSTYPE" == darwin* ]]; then
    export ARCHFLAGS='-Wno-error=unused-command-line-argument-hard-error-in-future'
fi

##############################################################################
# Aliases
##############################################################################


alias detect_encoding='file -bi'

if [[ "$OSTYPE" == darwin* ]]; then
    # Concatenate PDFs.
    alias concat-pdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'
    # View man page in Preview.
    function pman() {
        man -t $argv | open -f -a /Applications/Preview.app
    }
    # Prepend gnu coreutils path so that it was used instead of the system ones.
    PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

    # Same for MANPATH
    MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
    alias man='man -M $MANPATH'
fi

PATH="/Applications/OpenSCAD.app/Contents/MacOS:$PATH"

alias g='git'
alias st='git status'
alias dd='git diff'

#
# tmux
#

# Attach to a tmux instance.
function tma() {
    if [[ $# == 0 ]]; then
        tmux attach
    else
        tmux attach -t "$@"
    fi
}

# Create a new tmux instance.
function tmc() {
    if [[ $# == 0 ]]; then
        tmux new -s $(basename $(pwd))
    else
        tmux new -s "$@"
    fi
}

alias tm='tmux list-sessions'
alias tml='tm'
alias tms='tmuxinator start'
alias tmk='tmux kill-session -t'

# Add a fasd mapping
alias n='fasd_cd -i'

# Clean ssh persistent connections.
alias sshcleanup="rm -f ~/.ssh/_ssh_socket_*"

#
# Use C-Z to restore the laste suspended job.
#

fancy-ctrl-z () {
    if [[ $#BUFFER -eq 0 ]]; then
        BUFFER="fg"
        zle accept-line
    else
        zle push-input
        zle clear-screen
    fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

fast-ls () {
    BUFFER="ls"
    zle accept-line
}
zle -N fast-ls
bindkey '^Q' fast-ls

#
# FZF
#

fkill() {
    pid=$(ps -efww | sed 1d | fzf -m | awk '{print $2}')

    if [ "x$pid" != "x" ]
    then
        kill -${1:-9} $pid
    fi
}

# c - browse chrome history
c() {
    local cols sep
    cols=$(( COLUMNS / 3 ))
    sep='{{::}}'

    # Copy History DB to circumvent the lock
    # - See http://stackoverflow.com/questions/8936878 for the file path
    cp -f ~/Library/Application\ Support/Google/Chrome/Default/History /tmp/h

    sqlite3 -separator $sep /tmp/h \
        "select substr(title, 1, $cols), url
    from urls order by last_visit_time desc" |
    awk -F $sep '{printf "%-'$cols's  \x1b[36m%s\n", $1, $2}' |
    fzf --ansi --multi | sed 's#.*\(https*://\)#\1#' | xargs open
}

#
# Perl
#

PERL_MB_OPT="--install_base \"/Users/dmitry/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/dmitry/perl5"; export PERL_MM_OPT;
export PERL5LIB=/Users/dmitry/perl5/lib/perl5/

#
# Misc
#

alias ls="ls --group-directories-first --human-readable --color --sort=extension --classify --ignore=\"*.pyc\""

#
# Host-specific configuration
#

if [ $(hostname) = 'dmitry' ]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/runcoms/host-specific/dmitry-mbp"
fi
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
